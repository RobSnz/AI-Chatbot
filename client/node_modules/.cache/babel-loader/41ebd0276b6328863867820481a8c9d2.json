{"ast":null,"code":"import { INPUT_SUCCESS, INPUT_FAIL, SESSION_SUCCESS, SESSION_FAIL, MESSAGE_SUCCESS, MESSAGE_FAIL } from \"./types\";\nimport axios from \"axios\";\nexport const userMessage = message => async dispatch => {\n  try {\n    dispatch({\n      type: INPUT_SUCCESS,\n      payload: message\n    });\n  } catch (error) {\n    dispatch({\n      type: INPUT_FAIL\n    });\n  }\n};\nexport const createSession = () => async dispatch => {\n  try {\n    const response = await axios.get(\"/api/ibmwatson/session\");\n    dispatch({\n      type: SESSION_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SESSION_FAIL\n    });\n  }\n};\nexport const sendMessage = message => async dispatch => {\n  try {\n    const body = {\n      input: message\n    };\n    const request = axios.post(\"/api/ibmwatson/message\", body);\n    console.log(request);\n    dispatch({\n      type: MESSAGE_SUCCESS,\n      payload: (await request).data.output.generic[0].text\n    });\n  } catch (error) {\n    dispatch({\n      type: SESSION_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Bedi/Desktop/Projects/chatbot/client/src/actions/watson.js"],"names":["INPUT_SUCCESS","INPUT_FAIL","SESSION_SUCCESS","SESSION_FAIL","MESSAGE_SUCCESS","MESSAGE_FAIL","axios","userMessage","message","dispatch","type","payload","error","createSession","response","get","data","sendMessage","body","input","request","post","console","log","output","generic","text"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,eAApC,EAAqDC,YAArD,EAAmEC,eAAnE,EAAoFC,YAApF,QAAwG,SAAxG;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,aAAR;AAAuBW,MAAAA,OAAO,EAAEH;AAAhC,KAAD,CAAR;AACH,GAFD,CAEE,OAAOI,KAAP,EAAc;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACH;AACJ,CANM;AAQP,OAAO,MAAMY,aAAa,GAAG,MAAM,MAAOJ,QAAP,IAAoB;AACnD,MAAI;AACA,UAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,wBAAV,CAAvB;AACAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,eAAR;AAAyBS,MAAAA,OAAO,EAAEG,QAAQ,CAACE;AAA3C,KAAD,CAAR;AAEH,GAJD,CAIE,OAAOJ,KAAP,EAAc;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMc,WAAW,GAAIT,OAAD,IAAa,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACA,UAAMS,IAAI,GAAG;AAAEC,MAAAA,KAAK,EAACX;AAAR,KAAb;AACA,UAAMY,OAAO,GAAGd,KAAK,CAACe,IAAN,CAAW,wBAAX,EAAqCH,IAArC,CAAhB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,eAAR;AAAyBO,MAAAA,OAAO,EAAE,CAAC,MAAMS,OAAP,EAAgBJ,IAAhB,CAAqBQ,MAArB,CAA4BC,OAA5B,CAAoC,CAApC,EAAuCC;AAAzE,KAAD,CAAR;AAEH,GAND,CAME,OAAOd,KAAP,EAAc;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACH;AACJ,CAVM","sourcesContent":["import { INPUT_SUCCESS, INPUT_FAIL, SESSION_SUCCESS, SESSION_FAIL, MESSAGE_SUCCESS, MESSAGE_FAIL } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const userMessage = (message) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: INPUT_SUCCESS, payload: message });\r\n    } catch (error) {\r\n        dispatch({ type: INPUT_FAIL });\r\n    }\r\n};\r\n\r\nexport const createSession = () => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(\"/api/ibmwatson/session\");\r\n        dispatch({ type: SESSION_SUCCESS, payload: response.data });\r\n\r\n    } catch (error) {\r\n        dispatch({ type: SESSION_FAIL });\r\n    }\r\n};\r\n\r\nexport const sendMessage = (message) => async (dispatch) => {\r\n    try {\r\n        const body = { input:message };\r\n        const request = axios.post(\"/api/ibmwatson/message\", body);\r\n        console.log(request);\r\n        dispatch({ type: MESSAGE_SUCCESS, payload: (await request).data.output.generic[0].text });\r\n\r\n    } catch (error) {\r\n        dispatch({ type: SESSION_FAIL });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}