{"ast":null,"code":"import { INPUT_SUCCESS, INPUT_FAIL, SESSION_SUCCESS, SESSION_FAIL, MESSAGE_SUCCESS, MESSAGE_FAIL } from \"../actions/types\";\nconst initState = {\n  messages: []\n};\nexport default ((state = initState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  let {\n    messages\n  } = state; // what we do from action status\n\n  switch (type) {\n    case INPUT_SUCCESS:\n      messages = [...messages, {\n        message: payload,\n        type: \"user\"\n      }];\n      return { ...state,\n        messages\n      };\n\n    case INPUT_FAIL:\n      return { ...state\n      };\n\n    case SESSION_SUCCESS:\n      localStorage.setItem(\"session\", payload[\"session_id\"]);\n      return { ...state\n      };\n\n    case SESSION_FAIL:\n      return { ...state\n      };\n\n    case MESSAGE_SUCCESS:\n      messages = [...messages, {\n        message: payload,\n        type: \"bot\"\n      }];\n      return { ...state,\n        messages\n      };\n\n    case MESSAGE_FAIL:\n      return { ...state\n      };\n\n    default:\n      return { ...state\n      };\n  }\n\n  ;\n});","map":{"version":3,"sources":["C:/Users/Bedi/Desktop/Projects/chatbot/client/src/reducers/watson.js"],"names":["INPUT_SUCCESS","INPUT_FAIL","SESSION_SUCCESS","SESSION_FAIL","MESSAGE_SUCCESS","MESSAGE_FAIL","initState","messages","state","action","type","payload","message","localStorage","setItem"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,eAApC,EAAqDC,YAArD,EAAmEC,eAAnE,EAAoFC,YAApF,QAAwG,kBAAxG;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE;AADI,CAAlB;AAIA,gBAAe,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA+B;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;AACA,MAAI;AAAEF,IAAAA;AAAF,MAAeC,KAAnB,CAF0C,CAI1C;;AACA,UAAQE,IAAR;AACI,SAAKV,aAAL;AACIO,MAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAc;AAAEK,QAAAA,OAAO,EAAED,OAAX;AAAoBD,QAAAA,IAAI,EAAE;AAA1B,OAAd,CAAX;AACA,aAAO,EACH,GAAGF,KADA;AACOD,QAAAA;AADP,OAAP;;AAGJ,SAAKN,UAAL;AACI,aAAO,EACH,GAAGO;AADA,OAAP;;AAGJ,SAAKN,eAAL;AACIW,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,OAAO,CAAC,YAAD,CAAvC;AACA,aAAO,EACH,GAAGH;AADA,OAAP;;AAGJ,SAAKL,YAAL;AACI,aAAO,EACH,GAAGK;AADA,OAAP;;AAGJ,SAAKJ,eAAL;AACIG,MAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAc;AAAEK,QAAAA,OAAO,EAAED,OAAX;AAAoBD,QAAAA,IAAI,EAAE;AAA1B,OAAd,CAAX;AACA,aAAO,EACH,GAAGF,KADA;AAEHD,QAAAA;AAFG,OAAP;;AAIJ,SAAKF,YAAL;AACI,aAAO,EACH,GAAGG;AADA,OAAP;;AAGJ;AACI,aAAO,EACH,GAAGA;AADA,OAAP;AA9BR;;AAiCC;AACJ,CAvCD","sourcesContent":["import { INPUT_SUCCESS, INPUT_FAIL, SESSION_SUCCESS, SESSION_FAIL, MESSAGE_SUCCESS, MESSAGE_FAIL } from \"../actions/types\";\r\n\r\nconst initState = {\r\n    messages: [],\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    const { type, payload } = action;\r\n    let { messages } = state;\r\n\r\n    // what we do from action status\r\n    switch (type) {\r\n        case INPUT_SUCCESS:\r\n            messages = [...messages, { message: payload, type: \"user\" }];\r\n            return {\r\n                ...state, messages,\r\n            };\r\n        case INPUT_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n        case SESSION_SUCCESS:\r\n            localStorage.setItem(\"session\", payload[\"session_id\"]);\r\n            return {\r\n                ...state,\r\n            };\r\n        case SESSION_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n        case MESSAGE_SUCCESS:\r\n            messages = [...messages, { message: payload, type: \"bot\" }]\r\n            return {\r\n                ...state,\r\n                messages,\r\n            };\r\n        case MESSAGE_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n            };\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}